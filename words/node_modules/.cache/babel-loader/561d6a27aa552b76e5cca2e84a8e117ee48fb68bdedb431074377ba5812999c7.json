{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aelgendy2\\\\source\\\\repos\\\\Words\\\\words\\\\src\\\\components\\\\FileUploader.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUploader = () => {\n  const [file, setFile] = useState < File | null > null;\n  const [status, setStatus] = useState < \"initial\" | \"uploading\" | \"success\" | \"fail\" > \"initial\";\n  const handleFileChange = e => {\n    if (e.target.files) {\n      setStatus(\"initial\");\n      setFile(e.target.files[0]);\n    }\n  };\n  const handleUpload = async () => {\n    if (file) {\n      setStatus(\"uploading\");\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const result = await fetch(\"https://httpbin.org/post\", {\n          method: \"POST\",\n          body: formData\n        });\n        const data = await result.json();\n        console.log(data);\n        setStatus(\"success\");\n      } catch (error) {\n        console.error(error);\n        setStatus(\"fail\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        className: \"sr-only\",\n        children: \"Choose a file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file\",\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [\"File details:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Name: \", file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Type: \", file.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Size: \", file.size, \" bytes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), file && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"submit\",\n      children: \"Upload a file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Result, {\n      status: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = FileUploader;\nconst Result = status => {\n  if (status === \"success\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u2705 File uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  } else if (status === \"fail\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u274C File upload failed!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  } else if (status === \"uploading\") {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u23F3 Uploading selected file...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  } else {\n    return null;\n  }\n};\n_c2 = Result;\nexport default FileUploader;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileUploader\");\n$RefreshReg$(_c2, \"Result\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploader","file","setFile","File","status","setStatus","handleFileChange","e","target","files","handleUpload","formData","FormData","append","result","fetch","method","body","data","json","console","log","error","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","name","size","onClick","Result","_c","_c2","$RefreshReg$"],"sources":["C:/Users/aelgendy2/source/repos/Words/words/src/components/FileUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst FileUploader = () => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [status, setStatus] = useState<\r\n    \"initial\" | \"uploading\" | \"success\" | \"fail\"\r\n  >(\"initial\");\r\n\r\n  const handleFileChange = (e) => {\r\n    if (e.target.files) {\r\n      setStatus(\"initial\");\r\n      setFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (file) {\r\n      setStatus(\"uploading\");\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      try {\r\n        const result = await fetch(\"https://httpbin.org/post\", {\r\n          method: \"POST\",\r\n          body: formData,\r\n        });\r\n\r\n        const data = await result.json();\r\n\r\n        console.log(data);\r\n        setStatus(\"success\");\r\n      } catch (error) {\r\n        console.error(error);\r\n        setStatus(\"fail\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"input-group\">\r\n        <label htmlFor=\"file\" className=\"sr-only\">\r\n          Choose a file\r\n        </label>\r\n        <input id=\"file\" type=\"file\" onChange={handleFileChange} />\r\n      </div>\r\n      {file && (\r\n        <section>\r\n          File details:\r\n          <ul>\r\n            <li>Name: {file.name}</li>\r\n            <li>Type: {file.type}</li>\r\n            <li>Size: {file.size} bytes</li>\r\n          </ul>\r\n        </section>\r\n      )}\r\n\r\n      {file && (\r\n        <button onClick={handleUpload} className=\"submit\">\r\n          Upload a file\r\n        </button>\r\n      )}\r\n\r\n      <Result status={status} />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Result = (status)  => {\r\n  if (status === \"success\") {\r\n    return <p>✅ File uploaded successfully!</p>;\r\n  } else if (status === \"fail\") {\r\n    return <p>❌ File upload failed!</p>;\r\n  } else if (status === \"uploading\") {\r\n    return <p>⏳ Uploading selected file...</p>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default FileUploader;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}